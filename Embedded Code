#include "C:\Keil/Labware/tm4c123gh6pm.h"
#include "stdint.h"
#include "math.h"

void SystemInit() {
};

void RGBLED_Init (char led){
SYSCTL_RCGCGPIO_R |= 0x20;
while((SYSCTL_PRGPIO_R&0x20)==0){};
GPIO_PORTF_LOCK_R=0x4C4F434B;
GPIO_PORTF_CR_R|=led;
GPIO_PORTF_DIR_R |=led;
GPIO_PORTF_DEN_R |= led;
GPIO_PORTF_AMSEL_R &=~led;
GPIO_PORTF_PCTL_R &= ~0x0000FFF0;
GPIO_PORTF_DATA_R |=led;
}
void lcd_init(void)
{
SYSCTL_RCGCGPIO_R |= 0x0A; //activate port B and D 00001010
while((SYSCTL_PRGPIO_R&0x0A)==0){};
GPIO_PORTB_CR_R=0xFF;
GPIO_PORTB_DIR_R=0xFF;
GPIO_PORTB_AFSEL_R=0x00;
GPIO_PORTB_PCTL_R=0x0000000;
GPIO_PORTB_DEN_R=0xFF;
GPIO_PORTB_AMSEL_R=0x00;
GPIO_PORTB_PUR_R=0xFF;
GPIO_PORTB_DATA_R=0x00;
}
void delay_ms(int n){
int i,j;
for(i=0;i<n;i++)
for(j=0;j<3180;j++)
{}
}
 void delay_us(int n){
int i,j;
for(i=0;i<n;i++)
for(j=0;j<3;j++)
{}
}
  }
void lcd_command(char command){
GPIO_PORTD_DATA_R &=~0x06 ;// clear RS & RW 00000110
GPIO_PORTD_DATA_R |=0x01 ; // set enable =1
GPIO_PORTB_DATA_R =command ;// to send the value of command (clear,wake up ,display on )
delayMicroseconds(45);
GPIO_PORTD_DATA_R &=~0x01 ; // to change latch (covert enable from 1 to 0 vice versa)
}

void lcd_DATA(char DATA){
GPIO_PORTA_DATA_R =0x80 ; // RS = 1 FOR DATA
GPIO_PORTB_DATA_R =DATA ;
GPIO_PORTA_DATA_R |=0x40 ; // SET EN
delay_us(0);
GPIO_PORTA_DATA_R =0x00 ; //CLEAR EN to change latch (covert enable from 1 to 0 vice versa)
delay_us(40);

}

void switch_init(void){
SYSCTL_RCGCGPIO_R |= 0x20;
while((SYSCTL_PRGPIO_R&0x20)==0){};
GPIO_PORTF_LOCK_R=0x4C4F434B;
GPIO_PORTF_CR_R|=0x01;
GPIO_PORTF_DIR_R &=~ 0x01;
GPIO_PORTF_DEN_R |= 0x01;
GPIO_PORTF_AMSEL_R &=~0x01;
GPIO_PORTF_PCTL_R &=~0x0000000F;
GPIO_PORTF_PUR_R |= 0x01;
}


int main()
{
  // put your main code here, to run repeatedly:
lcd_init();
RGBLED_Init(0x04);

lcd_command(0x30);
lcd_command(0x0F);
lcd_command(0x38);
lcd_command(0x01);
lcd_command(0x06);
lcd_DATA (0x0A);

/////////////////for the switch

if (GPIO_PORTF_DATA_R !=0x01 )   // if switch 0 is on
 { if ( distance > 100 )
     {GPIO_PORTF_DATA_R =0x08;
			 delay_ms(2000);
			 GPIO_PORTF_DATA_R &=~0x08;
		 }  // green led on
    else GPIO_PORTF_DATA_R &=~0x08;
	 }
else GPIO_PORTF_DATA_R &=~0x08;

}
